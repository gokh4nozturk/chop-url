{
  "openapi": "3.0.0",
  "info": {
    "title": "Chop URL API",
    "version": "1.0.0",
    "description": "URL Shortener Service API Documentation"
  },
  "servers": [
    {
      "url": "http://localhost:8787",
      "description": "Development server"
    },
    {
      "url": "https://api.chop-url.com",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "AUTH",
      "description": "Authentication endpoints"
    },
    {
      "name": "TWO_FACTOR",
      "description": "Two-factor authentication endpoints"
    },
    {
      "name": "PROFILE",
      "description": "User profile management endpoints"
    },
    {
      "name": "EMAIL",
      "description": "Email verification endpoints"
    },
    {
      "name": "OAUTH",
      "description": "OAuth authentication endpoints"
    },
    {
      "name": "PASSWORD",
      "description": "Password reset endpoints"
    },
    {
      "name": "WAITLIST",
      "description": "Waitlist management endpoints"
    },
    {
      "name": "URL_SHORTENING",
      "description": "URL shortening endpoints"
    },
    {
      "name": "URL_MANAGEMENT",
      "description": "URL management endpoints"
    },
    {
      "name": "URL_STATISTICS",
      "description": "URL statistics endpoints"
    },
    {
      "name": "URL_GROUPS",
      "description": "URL group management endpoints"
    },
    {
      "name": "DOMAINS",
      "description": "Custom domain management endpoints"
    },
    {
      "name": "EVENTS",
      "description": "Event tracking endpoints"
    },
    {
      "name": "URL_ANALYTICS",
      "description": "URL analytics endpoints"
    },
    {
      "name": "DETAILED_ANALYTICS",
      "description": "Detailed analytics endpoints"
    },
    {
      "name": "USER_ANALYTICS",
      "description": "User analytics endpoints"
    },
    {
      "name": "STORAGE",
      "description": "Storage management endpoints"
    },
    {
      "name": "QR_CODES",
      "description": "QR code generation endpoints"
    },
    {
      "name": "USER_FEEDBACK",
      "description": "User feedback submission endpoints"
    },
    {
      "name": "ADMIN_FEEDBACK",
      "description": "Admin feedback management endpoints"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token for authentication"
      }
    },
    "schemas": {
      "ValidationErrorSchema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": ["VALIDATION_ERROR"],
            "description": "Validation error code",
            "example": "VALIDATION_ERROR"
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Invalid request body"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "path": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": ["code", "message", "path"]
            },
            "description": "Validation error details",
            "example": [
              {
                "code": "invalid_string",
                "message": "Required",
                "path": ["email"]
              }
            ]
          }
        },
        "required": ["code", "message", "details"]
      },
      "UnauthorizedErrorSchema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": ["UNAUTHORIZED", "INVALID_TOKEN", "EXPIRED_TOKEN"],
            "description": "Authorization error code",
            "example": "UNAUTHORIZED"
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Unauthorized access."
          }
        },
        "required": ["code", "message"]
      },
      "ForbiddenErrorSchema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": ["FORBIDDEN"],
            "description": "Forbidden error code",
            "example": "FORBIDDEN"
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Access forbidden."
          }
        },
        "required": ["code", "message"]
      },
      "NotFoundErrorSchema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": ["RESOURCE_NOT_FOUND", "URL_NOT_FOUND"],
            "description": "Not found error code",
            "example": "RESOURCE_NOT_FOUND"
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Requested resource not found."
          }
        },
        "required": ["code", "message"]
      },
      "DefaultErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Error code identifying the type of error",
            "example": "INTERNAL_SERVER_ERROR"
          },
          "message": {
            "type": "string",
            "description": "Human readable error message",
            "example": "Internal server error occurred."
          },
          "details": {
            "nullable": true,
            "description": "Additional error details, such as validation errors"
          }
        },
        "required": ["code", "message"]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "name": {
            "type": "string"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "twoFactorEnabled": {
            "type": "boolean"
          }
        },
        "required": ["id", "email"]
      },
      "UserProfileResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": ["user"]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": ["token", "user"]
      },
      "InvalidCredentialsErrorSchema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": ["INVALID_CREDENTIALS"],
            "description": "Invalid credentials error code",
            "example": "INVALID_CREDENTIALS"
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Invalid credentials."
          }
        },
        "required": ["code", "message"]
      },
      "UserNotFoundErrorSchema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": ["USER_NOT_FOUND"],
            "description": "User not found error code",
            "example": "USER_NOT_FOUND"
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "User not found."
          }
        },
        "required": ["code", "message"]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "minLength": 8
          },
          "code": {
            "type": "string"
          }
        },
        "required": ["email", "password"]
      },
      "AuthValidationErrorSchema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": ["VALIDATION_ERROR"],
            "description": "Validation error code",
            "example": "VALIDATION_ERROR"
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Invalid request body"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Error code",
                  "example": "invalid_string"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "Invalid email format"
                },
                "path": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Path to the invalid field",
                  "example": ["email"]
                }
              },
              "required": ["code", "message", "path"]
            },
            "description": "Validation error details",
            "example": [
              {
                "code": "invalid_string",
                "message": "Invalid email format",
                "path": ["email"]
              }
            ]
          }
        },
        "required": ["code", "message", "details"]
      },
      "UserExistsErrorSchema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": ["USER_EXISTS"],
            "description": "User already exists error code",
            "example": "USER_EXISTS"
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "User already exists."
          }
        },
        "required": ["code", "message"]
      },
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "minLength": 8
          },
          "confirmPassword": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": ["email", "password", "confirmPassword"]
      },
      "TwoFactorSetupInitResponse": {
        "type": "object",
        "properties": {
          "qrCode": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          }
        },
        "required": ["qrCode", "secret"]
      },
      "TwoFactorSetupResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "recoveryCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["success", "recoveryCodes"]
      },
      "TwoFactorCode": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "minLength": 6,
            "maxLength": 6
          }
        },
        "required": ["code"]
      },
      "RecoveryCodesResponse": {
        "type": "object",
        "properties": {
          "recoveryCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["recoveryCodes"]
      },
      "TwoFactorLogin": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "minLength": 6,
            "maxLength": 6
          }
        },
        "required": ["token", "code"]
      },
      "TwoFactorEnableResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        },
        "required": ["success"]
      },
      "TwoFactorDisableResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        },
        "required": ["success"]
      },
      "UpdateProfile": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "PasswordUpdateResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        },
        "required": ["success"]
      },
      "UpdatePassword": {
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string"
          },
          "newPassword": {
            "type": "string",
            "minLength": 8
          },
          "confirmPassword": {
            "type": "string"
          }
        },
        "required": ["currentPassword", "newPassword", "confirmPassword"]
      },
      "EmailVerificationResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": ["message"]
      },
      "VerifyEmail": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        },
        "required": ["token"]
      },
      "ResendVerificationResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": ["message"]
      },
      "OAuthUrlResponse": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          }
        },
        "required": ["url"]
      },
      "OAuthCallbackResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": ["token", "user"]
      },
      "PasswordResetRequestResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": ["message"]
      },
      "PasswordResetRequestSchema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": ["email"]
      },
      "PasswordResetResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": ["message"]
      },
      "PasswordResetSchema": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "newPassword": {
            "type": "string",
            "minLength": 8
          },
          "confirmPassword": {
            "type": "string"
          }
        },
        "required": ["token", "newPassword", "confirmPassword"]
      },
      "WaitlistResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "useCase": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          }
        },
        "required": ["id", "email", "name", "createdAt"]
      },
      "WaitlistRequestSchema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "name": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "useCase": {
            "type": "string"
          }
        },
        "required": ["email", "name"]
      },
      "WaitlistEntryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "useCase": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          }
        },
        "required": ["id", "email", "name", "createdAt"]
      },
      "UrlResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "shortUrl": {
            "type": "string"
          },
          "originalUrl": {
            "type": "string"
          },
          "shortId": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "groupId": {
            "type": "number"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "shortUrl",
          "originalUrl",
          "shortId",
          "isActive",
          "createdAt"
        ]
      },
      "UrlValidationErrorSchema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": ["VALIDATION_ERROR"],
            "description": "Validation error code",
            "example": "VALIDATION_ERROR"
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Invalid request body"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Validation error type",
                  "example": "invalid_string"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "Required"
                },
                "path": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Path to the invalid field",
                  "example": ["url"]
                }
              },
              "required": ["code", "message", "path"]
            },
            "description": "URL validation error details",
            "example": [
              {
                "code": "invalid_string",
                "message": "Invalid url",
                "path": ["url"]
              }
            ]
          }
        },
        "required": ["code", "message", "details"]
      },
      "CreateUrlRequest": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "customSlug": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "groupId": {
            "type": "number"
          }
        },
        "required": ["url"]
      },
      "UrlListResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UrlResponse"
        }
      },
      "UrlEmailValidationErrorSchema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": ["VALIDATION_ERROR"],
            "description": "Validation error code",
            "example": "VALIDATION_ERROR"
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Invalid request body"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Validation error type",
                  "example": "invalid_string"
                },
                "message": {
                  "type": "string",
                  "description": "Error description",
                  "example": "Required"
                },
                "path": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Path to the invalid field",
                  "example": ["email"]
                }
              },
              "required": ["code", "message", "path"]
            },
            "description": "Validation error details for email-related fields",
            "example": [
              {
                "code": "invalid_string",
                "message": "Required",
                "path": ["email"]
              }
            ]
          }
        },
        "required": ["code", "message", "details"]
      },
      "UrlListUnauthorizedSchema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": ["UNAUTHORIZED"],
            "description": "Unauthorized error code",
            "example": "UNAUTHORIZED"
          },
          "message": {
            "type": "string",
            "description": "Detailed error message",
            "example": "You must be logged in to view your URLs."
          }
        },
        "required": ["code", "message"]
      },
      "UrlListServerErrorSchema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": ["INTERNAL_SERVER_ERROR"],
            "description": "Server error code",
            "example": "INTERNAL_SERVER_ERROR"
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Failed to fetch URLs"
          }
        },
        "required": ["code", "message"]
      },
      "UrlNotFoundErrorSchema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": ["URL_NOT_FOUND"],
            "description": "URL not found error code",
            "example": "URL_NOT_FOUND"
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "URL not found."
          }
        },
        "required": ["code", "message"]
      },
      "UpdateUrlRequest": {
        "type": "object",
        "properties": {
          "originalUrl": {
            "type": "string",
            "format": "uri"
          },
          "customSlug": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "groupId": {
            "type": "number"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "UrlStatsResponse": {
        "type": "object",
        "properties": {
          "totalClicks": {
            "type": "number"
          },
          "uniqueVisitors": {
            "type": "number"
          },
          "countries": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "count": {
                  "type": "number"
                }
              },
              "required": ["name", "count"]
            }
          },
          "cities": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "count": {
                  "type": "number"
                }
              },
              "required": ["name", "count"]
            }
          },
          "regions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "count": {
                  "type": "number"
                }
              },
              "required": ["name", "count"]
            }
          },
          "timezones": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "count": {
                  "type": "number"
                }
              },
              "required": ["name", "count"]
            }
          },
          "referrers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "count": {
                  "type": "number"
                }
              },
              "required": ["name", "count"]
            }
          },
          "devices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "count": {
                  "type": "number"
                }
              },
              "required": ["name", "count"]
            }
          },
          "browsers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "count": {
                  "type": "number"
                }
              },
              "required": ["name", "count"]
            }
          },
          "operatingSystems": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "count": {
                  "type": "number"
                }
              },
              "required": ["name", "count"]
            }
          },
          "clicksByDate": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string"
                },
                "count": {
                  "type": "number"
                }
              },
              "required": ["date", "count"]
            }
          }
        },
        "required": [
          "totalClicks",
          "uniqueVisitors",
          "countries",
          "cities",
          "regions",
          "timezones",
          "referrers",
          "devices",
          "browsers",
          "operatingSystems",
          "clicksByDate"
        ]
      },
      "AnalyticsResponse": {
        "type": "object",
        "properties": {
          "totalClicks": {
            "type": "number"
          },
          "uniqueVisitors": {
            "type": "number"
          },
          "countries": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "count": {
                  "type": "number"
                }
              },
              "required": ["name", "count"]
            }
          },
          "cities": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "count": {
                  "type": "number"
                }
              },
              "required": ["name", "count"]
            }
          },
          "regions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "count": {
                  "type": "number"
                }
              },
              "required": ["name", "count"]
            }
          },
          "timezones": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "count": {
                  "type": "number"
                }
              },
              "required": ["name", "count"]
            }
          },
          "referrers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "count": {
                  "type": "number"
                }
              },
              "required": ["name", "count"]
            }
          },
          "devices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "count": {
                  "type": "number"
                }
              },
              "required": ["name", "count"]
            }
          },
          "browsers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "count": {
                  "type": "number"
                }
              },
              "required": ["name", "count"]
            }
          },
          "operatingSystems": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "count": {
                  "type": "number"
                }
              },
              "required": ["name", "count"]
            }
          },
          "clicksByDate": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string"
                },
                "count": {
                  "type": "number"
                }
              },
              "required": ["date", "count"]
            }
          }
        },
        "required": [
          "totalClicks",
          "uniqueVisitors",
          "countries",
          "cities",
          "regions",
          "timezones",
          "referrers",
          "devices",
          "browsers",
          "operatingSystems",
          "clicksByDate"
        ]
      },
      "UrlGroupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "userId": {
            "type": "number"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": ["id", "name", "userId", "createdAt"]
      },
      "CreateUrlGroupRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1
          },
          "description": {
            "type": "string"
          }
        },
        "required": ["name"]
      },
      "UpdateUrlGroupRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1
          },
          "description": {
            "type": "string"
          }
        }
      },
      "DomainSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "userId": {
            "type": "number"
          },
          "verified": {
            "type": "boolean"
          },
          "verificationToken": {
            "type": "string"
          },
          "recordType": {
            "type": "string",
            "enum": ["TXT", "CNAME"]
          },
          "recordValue": {
            "type": "string"
          },
          "recordName": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "name",
          "userId",
          "verified",
          "recordType",
          "recordValue",
          "createdAt"
        ]
      },
      "DomainsResponseSchema": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DomainSchema"
        }
      },
      "DomainResponseSchema": {
        "type": "object",
        "properties": {
          "domain": {
            "$ref": "#/components/schemas/DomainSchema"
          }
        },
        "required": ["domain"]
      },
      "DomainValidationErrorSchema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": ["VALIDATION_ERROR"],
            "description": "Validation error code",
            "example": "VALIDATION_ERROR"
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Invalid request body"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "path": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": ["code", "message", "path"]
            },
            "description": "Domain validation error details",
            "example": [
              {
                "code": "invalid_string",
                "message": "Required",
                "path": ["name"]
              }
            ]
          }
        },
        "required": ["code", "message", "details"]
      },
      "DomainExistsErrorSchema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": ["BAD_REQUEST"],
            "description": "Domain already exists error code",
            "example": "BAD_REQUEST"
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Domain already exists."
          }
        },
        "required": ["code", "message"]
      },
      "AddDomainSchema": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "minLength": 1
          },
          "settings": {
            "type": "object",
            "properties": {
              "redirectMode": {
                "type": "string",
                "enum": ["PROXY", "REDIRECT"]
              },
              "customNameservers": {
                "type": "string",
                "nullable": true
              },
              "forceSSL": {
                "type": "boolean"
              }
            }
          }
        },
        "required": ["domain"]
      },
      "DomainNotFoundErrorSchema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": ["RESOURCE_NOT_FOUND"],
            "description": "Domain not found error code",
            "example": "RESOURCE_NOT_FOUND"
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Domain not found."
          }
        },
        "required": ["code", "message"]
      },
      "UpdateDomainSchema": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string"
          },
          "verificationMethod": {
            "type": "string",
            "enum": ["DNS_TXT", "DNS_CNAME", "FILE"]
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "SuccessResponseSchema": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": ["message"]
      },
      "VerifyResponseSchema": {
        "type": "object",
        "properties": {
          "verified": {
            "type": "boolean"
          }
        },
        "required": ["verified"]
      },
      "DnsRecordResponseSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "ttl": {
            "type": "number"
          },
          "priority": {
            "type": "number"
          },
          "proxied": {
            "type": "boolean"
          }
        },
        "required": ["id", "type", "name", "content"]
      },
      "AddDnsRecordSchema": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["A", "AAAA", "CNAME", "TXT", "MX", "NS"]
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "content": {
            "type": "string",
            "minLength": 1
          },
          "ttl": {
            "type": "number"
          },
          "priority": {
            "type": "number"
          },
          "proxied": {
            "type": "boolean"
          }
        },
        "required": ["type", "name", "content"]
      },
      "DnsRecordsResponseSchema": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DnsRecordResponseSchema"
        }
      },
      "SslStatusResponseSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          }
        },
        "required": ["status"]
      },
      "HealthResponseSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "details": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            }
          }
        },
        "required": ["status"]
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        },
        "required": ["success"]
      },
      "TrackEventSchema": {
        "type": "object",
        "properties": {
          "urlId": {
            "type": "number"
          },
          "userId": {
            "type": "number"
          },
          "eventType": {
            "type": "string",
            "enum": ["REDIRECT", "PAGE_VIEW", "CLICK", "CONVERSION", "CUSTOM"]
          },
          "eventName": {
            "type": "string"
          },
          "properties": {
            "type": "object",
            "properties": {
              "source": {
                "type": "string",
                "nullable": true
              },
              "medium": {
                "type": "string",
                "nullable": true
              },
              "campaign": {
                "type": "string",
                "nullable": true
              },
              "term": {
                "type": "string",
                "nullable": true
              },
              "content": {
                "type": "string",
                "nullable": true
              },
              "shortId": {
                "type": "string"
              },
              "originalUrl": {
                "type": "string"
              }
            },
            "required": [
              "source",
              "medium",
              "campaign",
              "term",
              "content",
              "shortId",
              "originalUrl"
            ]
          },
          "deviceInfo": {
            "type": "object",
            "properties": {
              "userAgent": {
                "type": "string"
              },
              "ip": {
                "type": "string"
              },
              "browser": {
                "type": "string"
              },
              "browserVersion": {
                "type": "string"
              },
              "os": {
                "type": "string"
              },
              "osVersion": {
                "type": "string"
              },
              "deviceType": {
                "type": "string",
                "enum": ["desktop", "mobile", "tablet", "unknown"]
              }
            },
            "required": [
              "userAgent",
              "ip",
              "browser",
              "browserVersion",
              "os",
              "osVersion",
              "deviceType"
            ]
          },
          "geoInfo": {
            "type": "object",
            "properties": {
              "country": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "region": {
                "type": "string"
              },
              "regionCode": {
                "type": "string"
              },
              "timezone": {
                "type": "string"
              },
              "longitude": {
                "type": "string"
              },
              "latitude": {
                "type": "string"
              },
              "postalCode": {
                "type": "string"
              }
            },
            "required": [
              "country",
              "city",
              "region",
              "regionCode",
              "timezone",
              "longitude",
              "latitude",
              "postalCode"
            ]
          },
          "referrer": {
            "type": "string"
          }
        },
        "required": ["urlId", "eventType", "eventName"]
      },
      "CreateCustomEventSchema": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            }
          }
        },
        "required": ["userId", "name"]
      },
      "EventsResponse": {
        "type": "array",
        "items": {
          "nullable": true
        }
      },
      "CustomEventsResponse": {
        "type": "array",
        "items": {
          "nullable": true
        }
      },
      "UrlEventsResponse": {
        "type": "array",
        "items": {
          "nullable": true
        }
      },
      "AnalyticsValidationErrorSchema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": ["VALIDATION_ERROR"],
            "description": "Validation error code",
            "example": "VALIDATION_ERROR"
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Invalid request body"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "path": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": ["code", "message", "path"]
            },
            "description": "Validation error details",
            "example": [
              {
                "code": "invalid_enum_value",
                "message": "Invalid time range. Expected one of: 24h, 7d, 30d, 90d",
                "path": ["timeRange"]
              }
            ]
          }
        },
        "required": ["code", "message", "details"]
      },
      "AnalyticsUrlNotFoundErrorSchema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": ["URL_NOT_FOUND"],
            "description": "URL not found error code",
            "example": "URL_NOT_FOUND"
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "URL not found. Cannot retrieve analytics data."
          }
        },
        "required": ["code", "message"]
      },
      "GeoStatsResponse": {
        "type": "object",
        "properties": {
          "countries": {
            "type": "object",
            "additionalProperties": {
              "type": "number"
            }
          },
          "cities": {
            "type": "object",
            "additionalProperties": {
              "type": "number"
            }
          },
          "regions": {
            "type": "object",
            "additionalProperties": {
              "type": "number"
            }
          },
          "timezones": {
            "type": "object",
            "additionalProperties": {
              "type": "number"
            }
          }
        },
        "required": ["countries", "cities", "regions", "timezones"]
      },
      "DeviceStatsResponse": {
        "type": "object",
        "properties": {
          "browsers": {
            "type": "object",
            "additionalProperties": {
              "type": "number"
            }
          },
          "devices": {
            "type": "object",
            "additionalProperties": {
              "type": "number"
            }
          },
          "operatingSystems": {
            "type": "object",
            "additionalProperties": {
              "type": "number"
            }
          }
        },
        "required": ["browsers", "devices", "operatingSystems"]
      },
      "UtmStatsResponse": {
        "type": "object",
        "properties": {
          "sources": {
            "type": "object",
            "additionalProperties": {
              "type": "number"
            }
          },
          "mediums": {
            "type": "object",
            "additionalProperties": {
              "type": "number"
            }
          },
          "campaigns": {
            "type": "object",
            "additionalProperties": {
              "type": "number"
            }
          }
        },
        "required": ["sources", "mediums", "campaigns"]
      },
      "ClickHistoryResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "required": ["name", "value"]
        }
      },
      "UserAnalyticsResponse": {
        "nullable": true
      },
      "QRCodeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "urlId": {
            "type": "number"
          },
          "imageUrl": {
            "type": "string"
          },
          "downloadCount": {
            "type": "number"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "urlId",
          "imageUrl",
          "downloadCount",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateQRCodeSchema": {
        "type": "object",
        "properties": {
          "urlId": {
            "type": "number"
          },
          "imageUrl": {
            "type": "string"
          }
        },
        "required": ["urlId", "imageUrl"]
      },
      "UpdateQRCodeSchema": {
        "type": "object",
        "properties": {
          "imageUrl": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string"
          },
          "logoSize": {
            "type": "number"
          },
          "logoPosition": {
            "type": "string"
          }
        }
      }
    },
    "parameters": {}
  },
  "paths": {
    "/api/auth/me": {
      "get": {
        "description": "GET /auth/me",
        "tags": ["AUTH"],
        "summary": "GET /auth/me",
        "responses": {
          "200": {
            "description": "GET /auth/me",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "description": "POST /auth/login",
        "tags": ["AUTH"],
        "summary": "POST /auth/login",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "POST /auth/login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidCredentialsErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserNotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "description": "POST /auth/register",
        "tags": ["AUTH"],
        "summary": "POST /auth/register",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "POST /auth/register",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "409": {
            "description": "Error 409",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserExistsErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/2fa/setup": {
      "post": {
        "description": "POST /auth/2fa/setup",
        "tags": ["TWO_FACTOR"],
        "summary": "POST /auth/2fa/setup",
        "responses": {
          "200": {
            "description": "POST /auth/2fa/setup",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwoFactorSetupInitResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/2fa/verify-setup": {
      "post": {
        "description": "POST /auth/2fa/verify-setup",
        "tags": ["TWO_FACTOR"],
        "summary": "POST /auth/2fa/verify-setup",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TwoFactorCode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "POST /auth/2fa/verify-setup",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwoFactorSetupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/2fa/recovery-codes": {
      "get": {
        "description": "GET /auth/2fa/recovery-codes",
        "tags": ["TWO_FACTOR"],
        "summary": "GET /auth/2fa/recovery-codes",
        "responses": {
          "200": {
            "description": "GET /auth/2fa/recovery-codes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecoveryCodesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/2fa/verify-2fa": {
      "post": {
        "description": "POST /auth/2fa/verify-2fa",
        "tags": ["TWO_FACTOR"],
        "summary": "POST /auth/2fa/verify-2fa",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TwoFactorLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "POST /auth/2fa/verify-2fa",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/2fa/enable-2fa": {
      "post": {
        "description": "POST /auth/2fa/enable-2fa",
        "tags": ["TWO_FACTOR"],
        "summary": "POST /auth/2fa/enable-2fa",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TwoFactorCode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "POST /auth/2fa/enable-2fa",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwoFactorEnableResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/2fa/disable-2fa": {
      "post": {
        "description": "POST /auth/2fa/disable-2fa",
        "tags": ["TWO_FACTOR"],
        "summary": "POST /auth/2fa/disable-2fa",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TwoFactorCode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "POST /auth/2fa/disable-2fa",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwoFactorDisableResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/profile/update": {
      "put": {
        "description": "PUT /auth/profile/update",
        "tags": ["PROFILE"],
        "summary": "PUT /auth/profile/update",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "PUT /auth/profile/update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/profile/password": {
      "put": {
        "description": "PUT /auth/profile/password",
        "tags": ["PROFILE"],
        "summary": "PUT /auth/profile/password",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "PUT /auth/profile/password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/email/verify": {
      "post": {
        "description": "POST /auth/email/verify",
        "tags": ["EMAIL"],
        "summary": "POST /auth/email/verify",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "POST /auth/email/verify",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailVerificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/email/resend-verification": {
      "post": {
        "description": "POST /auth/email/resend-verification",
        "tags": ["EMAIL"],
        "summary": "POST /auth/email/resend-verification",
        "responses": {
          "200": {
            "description": "POST /auth/email/resend-verification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendVerificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/oauth/{provider}": {
      "get": {
        "description": "GET /auth/oauth/:provider",
        "tags": ["OAUTH"],
        "summary": "GET /auth/oauth/:provider",
        "responses": {
          "200": {
            "description": "GET /auth/oauth/:provider",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthUrlResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/oauth/{provider}/callback": {
      "get": {
        "description": "GET /auth/oauth/:provider/callback",
        "tags": ["OAUTH"],
        "summary": "GET /auth/oauth/:provider/callback",
        "responses": {
          "200": {
            "description": "GET /auth/oauth/:provider/callback",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthCallbackResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/password-reset/request": {
      "post": {
        "description": "POST /auth/password-reset/request",
        "tags": ["PASSWORD"],
        "summary": "POST /auth/password-reset/request",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "POST /auth/password-reset/request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordResetRequestResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/password-reset/reset": {
      "put": {
        "description": "PUT /auth/password-reset/reset",
        "tags": ["PASSWORD"],
        "summary": "PUT /auth/password-reset/reset",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "PUT /auth/password-reset/reset",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordResetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/waitlist/join": {
      "post": {
        "description": "POST /auth/waitlist/join",
        "tags": ["WAITLIST"],
        "summary": "POST /auth/waitlist/join",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaitlistRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "POST /auth/waitlist/join",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaitlistResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/waitlist/{email}": {
      "get": {
        "description": "GET /auth/waitlist/:email",
        "tags": ["WAITLIST"],
        "summary": "GET /auth/waitlist/:email",
        "responses": {
          "200": {
            "description": "GET /auth/waitlist/:email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaitlistEntryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/urls/shorten": {
      "post": {
        "description": "POST /urls/shorten",
        "tags": ["URL_SHORTENING"],
        "summary": "POST /urls/shorten",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUrlRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "POST /urls/shorten",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/urls/chop": {
      "post": {
        "description": "POST /urls/chop",
        "tags": ["URL_SHORTENING"],
        "summary": "POST /urls/chop",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUrlRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "POST /urls/chop",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/urls/list": {
      "get": {
        "description": "GET /urls/list",
        "tags": ["URL_MANAGEMENT"],
        "summary": "GET /urls/list",
        "responses": {
          "200": {
            "description": "GET /urls/list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlEmailValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlListUnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlListServerErrorSchema"
                }
              }
            }
          }
        }
      }
    },
    "/api/urls/{shortId}": {
      "get": {
        "description": "GET /urls/:shortId",
        "tags": ["URL_MANAGEMENT"],
        "summary": "GET /urls/:shortId",
        "responses": {
          "200": {
            "description": "GET /urls/:shortId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlListUnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlNotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "PATCH /urls/:shortId",
        "tags": ["URL_MANAGEMENT"],
        "summary": "PATCH /urls/:shortId",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUrlRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "PATCH /urls/:shortId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlListUnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlNotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "DELETE /urls/:shortId",
        "tags": ["URL_MANAGEMENT"],
        "summary": "DELETE /urls/:shortId",
        "responses": {
          "200": {
            "description": "DELETE /urls/:shortId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlListUnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlNotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/urls/{id}/statistics": {
      "get": {
        "description": "GET /urls/:id/statistics",
        "tags": ["URL_STATISTICS"],
        "summary": "GET /urls/:id/statistics",
        "responses": {
          "200": {
            "description": "GET /urls/:id/statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlStatsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/urls/statistics": {
      "get": {
        "description": "GET /urls/statistics",
        "tags": ["URL_STATISTICS"],
        "summary": "GET /urls/statistics",
        "responses": {
          "200": {
            "description": "GET /urls/statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/urls/statistics/export": {
      "get": {
        "description": "GET /urls/statistics/export",
        "tags": ["URL_STATISTICS"],
        "summary": "GET /urls/statistics/export",
        "responses": {
          "200": {
            "description": "GET /urls/statistics/export",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/urls/groups": {
      "get": {
        "description": "GET /urls/groups",
        "tags": ["URL_GROUPS"],
        "summary": "GET /urls/groups",
        "responses": {
          "200": {
            "description": "GET /urls/groups",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "POST /urls/groups",
        "tags": ["URL_GROUPS"],
        "summary": "POST /urls/groups",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUrlGroupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "POST /urls/groups",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/urls/groups/{id}": {
      "get": {
        "description": "GET /urls/groups/:id",
        "tags": ["URL_GROUPS"],
        "summary": "GET /urls/groups/:id",
        "responses": {
          "200": {
            "description": "GET /urls/groups/:id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "PUT /urls/groups/:id",
        "tags": ["URL_GROUPS"],
        "summary": "PUT /urls/groups/:id",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUrlGroupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "PUT /urls/groups/:id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "DELETE /urls/groups/:id",
        "tags": ["URL_GROUPS"],
        "summary": "DELETE /urls/groups/:id",
        "responses": {
          "200": {
            "description": "DELETE /urls/groups/:id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/domains/list": {
      "get": {
        "description": "GET /domains/list",
        "tags": ["DOMAINS"],
        "summary": "GET /domains/list",
        "responses": {
          "200": {
            "description": "GET /domains/list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainsResponseSchema"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/domains/create": {
      "post": {
        "description": "POST /domains/create",
        "tags": ["DOMAINS"],
        "summary": "POST /domains/create",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDomainSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "POST /domains/create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainResponseSchema"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "409": {
            "description": "Error 409",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainExistsErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/domains/{id}": {
      "get": {
        "description": "GET /domains/:id",
        "tags": ["DOMAINS"],
        "summary": "GET /domains/:id",
        "responses": {
          "200": {
            "description": "GET /domains/:id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainResponseSchema"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainNotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "PATCH /domains/:id",
        "tags": ["DOMAINS"],
        "summary": "PATCH /domains/:id",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDomainSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "PATCH /domains/:id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainResponseSchema"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "DELETE /domains/:id",
        "tags": ["DOMAINS"],
        "summary": "DELETE /domains/:id",
        "responses": {
          "200": {
            "description": "DELETE /domains/:id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseSchema"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/domains/{id}/verify": {
      "post": {
        "description": "POST /domains/:id/verify",
        "tags": ["DOMAINS"],
        "summary": "POST /domains/:id/verify",
        "responses": {
          "200": {
            "description": "POST /domains/:id/verify",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyResponseSchema"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/domains/{id}/dns": {
      "post": {
        "description": "POST /domains/:id/dns",
        "tags": ["DOMAINS"],
        "summary": "POST /domains/:id/dns",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDnsRecordSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "POST /domains/:id/dns",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DnsRecordResponseSchema"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "GET /domains/:id/dns",
        "tags": ["DOMAINS"],
        "summary": "GET /domains/:id/dns",
        "responses": {
          "200": {
            "description": "GET /domains/:id/dns",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DnsRecordsResponseSchema"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/domains/{id}/ssl/status": {
      "get": {
        "description": "GET /domains/:id/ssl/status",
        "tags": ["DOMAINS"],
        "summary": "GET /domains/:id/ssl/status",
        "responses": {
          "200": {
            "description": "GET /domains/:id/ssl/status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SslStatusResponseSchema"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/domains/{id}/ssl/renew": {
      "post": {
        "description": "POST /domains/:id/ssl/renew",
        "tags": ["DOMAINS"],
        "summary": "POST /domains/:id/ssl/renew",
        "responses": {
          "200": {
            "description": "POST /domains/:id/ssl/renew",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseSchema"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/domains/{id}/health": {
      "get": {
        "description": "GET /domains/:id/health",
        "tags": ["DOMAINS"],
        "summary": "GET /domains/:id/health",
        "responses": {
          "200": {
            "description": "GET /domains/:id/health",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponseSchema"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/events": {
      "post": {
        "description": "POST /analytics/events",
        "tags": ["EVENTS"],
        "summary": "POST /analytics/events",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackEventSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "POST /analytics/events",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/custom-events": {
      "post": {
        "description": "POST /analytics/custom-events",
        "tags": ["EVENTS"],
        "summary": "POST /analytics/custom-events",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomEventSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "POST /analytics/custom-events",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/events/{urlId}": {
      "get": {
        "description": "GET /analytics/events/:urlId",
        "tags": ["EVENTS"],
        "summary": "GET /analytics/events/:urlId",
        "responses": {
          "200": {
            "description": "GET /analytics/events/:urlId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/custom-events/{userId}": {
      "get": {
        "description": "GET /analytics/custom-events/:userId",
        "tags": ["EVENTS"],
        "summary": "GET /analytics/custom-events/:userId",
        "responses": {
          "200": {
            "description": "GET /analytics/custom-events/:userId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomEventsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/urls/{shortId}/stats": {
      "get": {
        "description": "GET /analytics/urls/:shortId/stats",
        "tags": ["URL_ANALYTICS"],
        "summary": "GET /analytics/urls/:shortId/stats",
        "responses": {
          "200": {
            "description": "GET /analytics/urls/:shortId/stats",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UrlStatsResponse"
                    },
                    {
                      "properties": {
                        "totalEvents": {
                          "type": "number"
                        },
                        "uniqueVisitors": {
                          "type": "number"
                        },
                        "lastEventAt": {
                          "type": "string",
                          "nullable": true
                        },
                        "url": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "shortId": {
                              "type": "string"
                            },
                            "originalUrl": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "shortId",
                            "originalUrl",
                            "createdAt"
                          ]
                        }
                      },
                      "required": [
                        "totalEvents",
                        "uniqueVisitors",
                        "lastEventAt",
                        "url"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/urls/{shortId}/events": {
      "get": {
        "description": "GET /analytics/urls/:shortId/events",
        "tags": ["EVENTS", "URL_ANALYTICS"],
        "summary": "GET /analytics/urls/:shortId/events",
        "responses": {
          "200": {
            "description": "GET /analytics/urls/:shortId/events",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlEventsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/urls/url/{urlId}/stats": {
      "get": {
        "description": "GET /analytics/urls/url/:urlId/stats",
        "tags": ["URL_ANALYTICS"],
        "summary": "GET /analytics/urls/url/:urlId/stats",
        "responses": {
          "200": {
            "description": "GET /analytics/urls/url/:urlId/stats",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UrlStatsResponse"
                    },
                    {
                      "properties": {
                        "totalEvents": {
                          "type": "number"
                        },
                        "uniqueVisitors": {
                          "type": "number"
                        },
                        "lastEventAt": {
                          "type": "string",
                          "nullable": true
                        },
                        "url": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "shortId": {
                              "type": "string"
                            },
                            "originalUrl": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "shortId",
                            "originalUrl",
                            "createdAt"
                          ]
                        }
                      },
                      "required": [
                        "totalEvents",
                        "uniqueVisitors",
                        "lastEventAt",
                        "url"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsUrlNotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/urls/{shortId}/geo": {
      "get": {
        "description": "GET /analytics/urls/:shortId/geo",
        "tags": ["DETAILED_ANALYTICS", "URL_ANALYTICS"],
        "summary": "GET /analytics/urls/:shortId/geo",
        "responses": {
          "200": {
            "description": "GET /analytics/urls/:shortId/geo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeoStatsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/urls/{shortId}/devices": {
      "get": {
        "description": "GET /analytics/urls/:shortId/devices",
        "tags": ["DETAILED_ANALYTICS", "URL_ANALYTICS"],
        "summary": "GET /analytics/urls/:shortId/devices",
        "responses": {
          "200": {
            "description": "GET /analytics/urls/:shortId/devices",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceStatsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/urls/{shortId}/utm": {
      "get": {
        "description": "GET /analytics/urls/:shortId/utm",
        "tags": ["DETAILED_ANALYTICS", "URL_ANALYTICS"],
        "summary": "GET /analytics/urls/:shortId/utm",
        "responses": {
          "200": {
            "description": "GET /analytics/urls/:shortId/utm",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtmStatsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/urls/{shortId}/clicks": {
      "get": {
        "description": "GET /analytics/urls/:shortId/clicks",
        "tags": ["DETAILED_ANALYTICS", "URL_ANALYTICS"],
        "summary": "GET /analytics/urls/:shortId/clicks",
        "responses": {
          "200": {
            "description": "GET /analytics/urls/:shortId/clicks",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClickHistoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/users/{userId}": {
      "get": {
        "description": "GET /analytics/users/:userId",
        "tags": ["USER_ANALYTICS"],
        "summary": "GET /analytics/users/:userId",
        "responses": {
          "200": {
            "description": "GET /analytics/users/:userId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAnalyticsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/storage/generate-presigned-url": {
      "post": {
        "description": "POST /storage/generate-presigned-url",
        "tags": ["STORAGE"],
        "summary": "POST /storage/generate-presigned-url",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "minLength": 1
                  },
                  "operation": {
                    "type": "string",
                    "enum": ["read", "write"],
                    "default": "write"
                  }
                },
                "required": ["path"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "POST /storage/generate-presigned-url",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": ["url"]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/storage/public-url": {
      "get": {
        "description": "GET /storage/public-url",
        "tags": ["STORAGE"],
        "summary": "GET /storage/public-url",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "name": "path",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET /storage/public-url",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": ["url"]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/qr/create": {
      "post": {
        "description": "POST /qr/create",
        "tags": ["QR_CODES"],
        "summary": "POST /qr/create",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQRCodeSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "POST /qr/create",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QRCodeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/qr/url/{urlId}": {
      "get": {
        "description": "GET /qr/url/:urlId",
        "tags": ["QR_CODES"],
        "summary": "GET /qr/url/:urlId",
        "responses": {
          "200": {
            "description": "GET /qr/url/:urlId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QRCodeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/qr/{id}": {
      "get": {
        "description": "GET /qr/:id",
        "tags": ["QR_CODES"],
        "summary": "GET /qr/:id",
        "responses": {
          "200": {
            "description": "GET /qr/:id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QRCodeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "PUT /qr/:id",
        "tags": ["QR_CODES"],
        "summary": "PUT /qr/:id",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateQRCodeSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "PUT /qr/:id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QRCodeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/qr/{id}/download": {
      "post": {
        "description": "POST /qr/:id/download",
        "tags": ["QR_CODES"],
        "summary": "POST /qr/:id/download",
        "responses": {
          "200": {
            "description": "POST /qr/:id/download",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/waitlist/list": {
      "get": {
        "description": "GET /api/admin/waitlist/list",
        "tags": ["WAITLIST"],
        "summary": "GET /api/admin/waitlist/list",
        "responses": {
          "200": {
            "description": "GET /api/admin/waitlist/list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "waitListUsers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "email": {
                            "type": "string",
                            "format": "email"
                          },
                          "name": {
                            "type": "string"
                          },
                          "company": {
                            "type": "string",
                            "nullable": true
                          },
                          "use_case": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "pending",
                              "approved",
                              "rejected",
                              "invited",
                              "registered"
                            ]
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "email",
                          "name",
                          "company",
                          "use_case",
                          "status",
                          "created_at",
                          "updated_at"
                        ]
                      }
                    }
                  },
                  "required": ["waitListUsers"]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/waitlist/approve": {
      "post": {
        "description": "POST /api/admin/waitlist/approve",
        "tags": ["WAITLIST"],
        "summary": "POST /api/admin/waitlist/approve",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "POST /api/admin/waitlist/approve",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "message"]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/feedback/submit": {
      "post": {
        "description": "POST /api/admin/feedback/submit",
        "tags": ["USER_FEEDBACK"],
        "summary": "POST /api/admin/feedback/submit",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "category": {
                    "type": "string",
                    "enum": ["bug", "feature", "improvement", "other"]
                  },
                  "title": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "description": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1000
                  },
                  "priority": {
                    "type": "string",
                    "enum": ["low", "medium", "high"]
                  }
                },
                "required": ["category", "title", "description"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "POST /api/admin/feedback/submit",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/feedback/list": {
      "get": {
        "description": "GET /api/admin/feedback/list",
        "tags": ["USER_FEEDBACK"],
        "summary": "GET /api/admin/feedback/list",
        "responses": {
          "200": {
            "description": "GET /api/admin/feedback/list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "userId": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "category": {
                        "type": "string",
                        "enum": ["bug", "feature", "improvement", "other"]
                      },
                      "status": {
                        "type": "string",
                        "enum": ["open", "in_progress", "closed"]
                      },
                      "priority": {
                        "type": "string",
                        "enum": ["low", "medium", "high"]
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "userId",
                      "title",
                      "description",
                      "category",
                      "status",
                      "priority",
                      "createdAt",
                      "updatedAt"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/feedback/all": {
      "get": {
        "description": "GET /api/admin/feedback/all",
        "tags": ["ADMIN_FEEDBACK"],
        "summary": "GET /api/admin/feedback/all",
        "responses": {
          "200": {
            "description": "GET /api/admin/feedback/all",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "userId": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "category": {
                        "type": "string",
                        "enum": ["bug", "feature", "improvement", "other"]
                      },
                      "status": {
                        "type": "string",
                        "enum": ["open", "in_progress", "closed"]
                      },
                      "priority": {
                        "type": "string",
                        "enum": ["low", "medium", "high"]
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "userId",
                      "title",
                      "description",
                      "category",
                      "status",
                      "priority",
                      "createdAt",
                      "updatedAt"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/feedback/{id}/status": {
      "patch": {
        "description": "PATCH /api/admin/feedback/:id/status",
        "tags": ["ADMIN_FEEDBACK"],
        "summary": "PATCH /api/admin/feedback/:id/status",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["open", "in_progress", "closed"]
                  }
                },
                "required": ["status"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "PATCH /api/admin/feedback/:id/status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/feedback/{id}/priority": {
      "patch": {
        "description": "PATCH /api/admin/feedback/:id/priority",
        "tags": ["ADMIN_FEEDBACK"],
        "summary": "PATCH /api/admin/feedback/:id/priority",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "priority": {
                    "type": "string",
                    "enum": ["low", "medium", "high"]
                  }
                },
                "required": ["priority"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "PATCH /api/admin/feedback/:id/priority",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/feedback/{id}": {
      "delete": {
        "description": "DELETE /api/admin/feedback/:id",
        "tags": ["ADMIN_FEEDBACK"],
        "summary": "DELETE /api/admin/feedback/:id",
        "responses": {
          "200": {
            "description": "DELETE /api/admin/feedback/:id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - The request was malformed or contained invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required or has failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The authenticated user does not have permission to access the resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenErrorSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found - The requested resource could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred on the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  }
}

name: CI/CD

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Run linting
        run: pnpm lint
        
      - name: Check formatting
        run: pnpm format

  lib:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Build lib package
        run: cd packages/chop-url-lib && pnpm run build
        
      - name: Test lib package
        run: cd packages/chop-url-lib && pnpm run test:coverage
        
      - name: Show lib coverage
        run: |
          echo "## Lib Package Test Coverage" >> $GITHUB_STEP_SUMMARY
          cat packages/chop-url-lib/coverage/text-summary.txt >> $GITHUB_STEP_SUMMARY || echo "No coverage report found" >> $GITHUB_STEP_SUMMARY

  backend:
    needs: lib
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Build lib package
        run: cd packages/chop-url-lib && pnpm run build
        
      - name: Test backend
        run: cd packages/backend && pnpm run test:coverage
        
      - name: Show backend coverage
        run: |
          echo "## Backend Test Coverage" >> $GITHUB_STEP_SUMMARY
          cat packages/backend/coverage/text-summary.txt >> $GITHUB_STEP_SUMMARY || echo "No coverage report found" >> $GITHUB_STEP_SUMMARY

  frontend:
    needs: lib
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Build lib package
        run: cd packages/chop-url-lib && pnpm run build
        
      - name: Test frontend
        run: cd packages/chop-url-fe && pnpm run test:coverage
        
      - name: Show frontend coverage
        run: |
          echo "## Frontend Test Coverage" >> $GITHUB_STEP_SUMMARY
          cat packages/chop-url-fe/coverage/text-summary.txt >> $GITHUB_STEP_SUMMARY || echo "No coverage report found" >> $GITHUB_STEP_SUMMARY

  build:
    needs: [lint, lib, backend, frontend]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Build packages
        run: pnpm build

  deploy-backend:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Deploy to Cloudflare Workers
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: pnpm deploy:backend

  deploy-frontend:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: pnpm deploy:frontend

  publish-lib:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Build library
        run: pnpm deploy:lib
        
      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: cd packages/chop-url-lib && pnpm publish --no-git-checks 
